server:
  port: ${SERVER_PORT}

spring:
  main:
    web-application-type: reactive
  application:
    name: gateway-service

#  config:
#    import: optional:file:.env[.properties]
  cloud:
    gateway:
      routes:
        # 로그인이 필요하지 않은 요청
        - id: user-service-signup
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/signup
            - Method=POST
        - id: user-service-login
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/login
            - Method=POST
        - id: user-service-test
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/hello2
            - Method=GET
        - id: user-service-logout
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/logout
            - Method=POST
        - id: user-service-token-reissue
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/token/reissue
            - Method=POST
        - id: delivery-service-assign-manager
          uri: lb://delivery-service
          predicates:
            - Path=/delivery-service/api/send
            - Method=GET

        - id: hub-service  #TODO: order에 있는 hubclient 주소 로그인 없이 추가
          uri: lb://hub-service
          predicates:
            - Path=/hub-service/api/**
        #store-service
        - id: store-service-getList
          uri: lb://store-service
          predicates:
            - Path=/store-service/api/getStores/**
            - Method=GET
        - id: store-service-search
          uri: lb://store-service
          predicates:
            - Path=/store-service/api/search/**
            - Method=GET
        # 로그인 필요한 요청(토큰 검증 필터 존재)
        - id: user-service # 라우트 식별자
          uri: lb://user-service  # 'user-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/user-service/api/**  # 경로로 들어오는 요청을 이 라우트로 처리
          filters:
            - name: AuthPermissionPreFilter
        - id: slack-service
          uri: lb://slack-service
          predicates:
            - Path=/slack-service/api/**
          filters:
            - name: AuthPermissionPreFilter
        #store-service
        - id: store-service
          uri: lb://store-service
          predicates:
            - Path=/store-service/api/create/**
          filters:
            - name: AuthPermissionPreFilter

        - id: store-service-update
          uri: lb://store-service
          predicates:
            - Path=/store-service/api/update/**
          filters:
            - name: AuthPermissionPreFilter

        - id: store-service-delete
          uri: lb://store-service
          predicates:
            - Path=/store-service/api/delete/**
          filters:
            - name: AuthPermissionPreFilter
        - id: delivery-service
          uri: lb://delivery-service
          predicates:
              - Path=/delivery-service/api/**
          filters:
              - name: AuthPermissionPreFilter

        # product-service
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product-service/api/**
          filters:
            - name: AuthPermissionPreFilter

        - id: slack-service-get-messages
          uri: lb://slack-service
          predicates:
            - Path=/slack-service/api/getSlack
          filters:
            - name: AuthPermissionPreFilter

#        - id: hub-service
#          uri: lb://hub-service
#          predicates:
#            - Path=/hub-service/api/**
#          filters:
#            - name: AuthPermissionPreFilter


        # order-service
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/api/**
#          filters:
#            - name: AuthPermissionPreFilter

        # Swagger UI 허용 설정
        - id: user-service-swagger
          uri: lb://user-service
          predicates:
            - Path=/user-service/v3/api-docs
          filters:
            - StripPrefix=1
        - id: delivery-service-swagger
          uri: lb://delivery-service
          predicates:
            - Path=/delivery-service/v3/api-docs
          filters:
            - StripPrefix=1
        - id: hub-service-swagger
          uri: lb://hub-service
          predicates:
            - Path=/hub-service/v3/api-docs
          filters:
            - StripPrefix=1 # /hub-service/v3/api-docs 경로를 /v3/api-docs로 변경하여 전송
        - id: store-service-swagger
          uri: lb://store-service
          predicates:
            - Path=/store-service/v3/api-docs
          filters:
            - StripPrefix=1
        - id: product-service-swagger
          uri: lb://product-service
          predicates:
              - Path=/product-service/v3/api-docs
          filters:
            - StripPrefix=1
        - id: order-service-swagger
          uri: lb://order-service
          predicates:
            - Path=/order-service/v3/api-docs
          filters:
            - StripPrefix=1
        - id: slack-service-swagger
          uri: lb://slack-service
          predicates:
            - Path=/slack-service/v3/api-docs
          filters:
            - StripPrefix=1

      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정
  jwt:
    secret: ${JWT_SECRET}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration # JPA 자동설정 무시. JPA가 필요하지 않기때문
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER}
    register-with-eureka: true
    fetch-registry: true

management:
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL}
  tracing:
    sampling:
      probability: 1.0

# swagger 설정
springdoc:
  swagger-ui:
    urls:
      - name: user-service
        url: /user-service/v3/api-docs
      - name: delivery-service
        url: /delivery-service/v3/api-docs
      - name: hub-service
        url: /hub-service/v3/api-docs
      - name: store-service
        url: /store-service/v3/api-docs
      - name: product-service
        url: /product-service/v3/api-docs
      - name: order-service
        url: /order-service/v3/api-docs
      - name: slack-service
        url: /slack-service/v3/api-docs

    path: /swagger-ui.html